namespace TP04_Drcuker_Daiksel.Models;


public class Ahorcado
{
    public int intentos { get; private set; }
    public int fallos { get; private set; }
    public char[] letras { get; private set; }
    public char[] letrasAdivinadas { get; private set; }
    public List<char> letrasFalladas { get; private set; }
    public static string PALABRA { get; private set; } 
    public static bool finalizar { get; private set; }

    public Ahorcado()
    {
        PALABRA = "COINCIDENCIA";
        intentos = 0;
        finalizar = false;
        letras = PALABRA.ToCharArray();
        letrasAdivinadas = new char[letras.Length];
        for (int i = 0; i < letrasAdivinadas.Length; i++)
        {
            letrasAdivinadas[i] = '_';
        }
        letrasFalladas = new List<char>();
        fallos = 0;
    }


    public string adivinarLetra(char letra)
    {
        string devolver;
        intentos++;
        
        if(letrasFalladas.Contains(letra) || letrasAdivinadas.Contains(letra)){
            devolver = "Ya intentaste con esta letra";
        }
        else if (letras.Contains(letra) == true){
            for(int i = 0; i < letras.Length; i++){
        if(letras[i] == letra){
            letrasAdivinadas[i] = letra;
        }
        }
            devolver = "Adivinaste!";
        }
        else
        {
            fallos++;
            letrasFalladas.Add(letra);
            devolver = "Incorrecto!";
        }
        return devolver;
    }

    

}
